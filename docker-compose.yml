version: '3'
services:
  php-fpm:
    build:
      context: "./docker/php-fpm"
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    networks:
      - sail
    expose:
      - "9000"
  nginx:
    build:
      context: "./docker/nginx"
    container_name: nginx-webserver
    restart: unless-stopped
    depends_on:
      - php-fpm
    volumes:
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
    ports:
#      - "${NGINX_HOST_HTTPS_PORT}:443"
#      - "${NGINX_HOST_HTTP_PORT}:80"
        - "80:9000"
    networks:
      - sail
  mix:
    platform: linux/x86_64
    container_name: dev_site_laravel_mix
    build:
      dockerfile: ./docker/mix/Dockerfile
      context: .
    volumes:
      - type: bind
        source: ./public
        target: /app/public
      - type: bind
        source: ./resources
        target: /app/resources
      - type: bind
        source: ./package.json
        target: /app/package.json
      - type: bind
        source: ./yarn.lock
        target: /app/yarn.lock
      - type: bind
        source: ./webpack.mix.js
        target: /app/webpack.mix.js
    ports:
      - '35729:35729'
    env_file:
      - .env
  mysql:
    image: 'mysql/mysql-server:8.0'
    container_name: dev_site_mysql
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - '${DATA_PATH_HOST}/mysql:/var/lib/mysql'
      - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    networks:
      - sail
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s
  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - '${DATA_PATH_HOST}/redis:/data'
    networks:
      - sail
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s
networks:
  sail:
    driver: bridge
volumes:
  sail-mysql:
    driver: local
  sail-redis:
    driver: local
  sail-meilisearch:
    driver: local
